// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using kawsay.Data;

#nullable disable

namespace kawsay.Migrations
{
    [DbContext(typeof(KawsayDbContext))]
    [Migration("20250513104715_ClassOccurrence")]
    partial class ClassOccurrence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("kawsay.Entities.ClassEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TimetableId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("kawsay.Entities.ClassOccurence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<int>("DayId")
                        .HasColumnType("integer");

                    b.Property<int>("StartPeriodId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("DayId");

                    b.HasIndex("StartPeriodId");

                    b.ToTable("ClassOccurence");
                });

            modelBuilder.Entity("kawsay.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CSPR-101",
                            Name = "Programming 1"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CSPR-124",
                            Name = "Programming 2"
                        },
                        new
                        {
                            Id = 3,
                            Code = "MATH-201",
                            Name = "Linear Algebra"
                        },
                        new
                        {
                            Id = 4,
                            Code = "MATH-101",
                            Name = "Calculus I"
                        });
                });

            modelBuilder.Entity("kawsay.Entities.PeriodPreferenceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<int>("StartPeriodId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StartPeriodId");

                    b.ToTable("PeriodPreferences");
                });

            modelBuilder.Entity("kawsay.Entities.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dave Smith",
                            Type = "Professor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Doe",
                            Type = "Faculty Practitioner"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Alice Johnson",
                            Type = "Professor"
                        });
                });

            modelBuilder.Entity("kawsay.Entities.TimetableDayEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimetableId");

                    b.ToTable("TimetableDays");
                });

            modelBuilder.Entity("kawsay.Entities.TimetableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("kawsay.Entities.TimetablePeriodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("End")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimetableId");

                    b.ToTable("TimetablePeriods");
                });

            modelBuilder.Entity("kawsay.Entities.ClassEntity", b =>
                {
                    b.HasOne("kawsay.Entities.CourseEntity", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kawsay.Entities.TeacherEntity", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("kawsay.Entities.TimetableEntity", "Timetable")
                        .WithMany("Classes")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("kawsay.Entities.ClassOccurence", b =>
                {
                    b.HasOne("kawsay.Entities.ClassEntity", "Class")
                        .WithMany("ClassOccurrences")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kawsay.Entities.TimetableDayEntity", "DayEntity")
                        .WithMany("Occurrences")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("kawsay.Entities.TimetablePeriodEntity", "StartPeriod")
                        .WithMany("Occurrences")
                        .HasForeignKey("StartPeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("DayEntity");

                    b.Navigation("StartPeriod");
                });

            modelBuilder.Entity("kawsay.Entities.PeriodPreferenceEntity", b =>
                {
                    b.HasOne("kawsay.Entities.ClassEntity", "Class")
                        .WithMany("PeriodPreferences")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kawsay.Entities.TimetablePeriodEntity", "StartPeriod")
                        .WithMany("PeriodPreferences")
                        .HasForeignKey("StartPeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("StartPeriod");
                });

            modelBuilder.Entity("kawsay.Entities.TimetableDayEntity", b =>
                {
                    b.HasOne("kawsay.Entities.TimetableEntity", "Timetable")
                        .WithMany("Days")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("kawsay.Entities.TimetablePeriodEntity", b =>
                {
                    b.HasOne("kawsay.Entities.TimetableEntity", "Timetable")
                        .WithMany("Periods")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("kawsay.Entities.ClassEntity", b =>
                {
                    b.Navigation("ClassOccurrences");

                    b.Navigation("PeriodPreferences");
                });

            modelBuilder.Entity("kawsay.Entities.CourseEntity", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("kawsay.Entities.TeacherEntity", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("kawsay.Entities.TimetableDayEntity", b =>
                {
                    b.Navigation("Occurrences");
                });

            modelBuilder.Entity("kawsay.Entities.TimetableEntity", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Days");

                    b.Navigation("Periods");
                });

            modelBuilder.Entity("kawsay.Entities.TimetablePeriodEntity", b =>
                {
                    b.Navigation("Occurrences");

                    b.Navigation("PeriodPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
